@model MovieWeb.Models.Movie_64130299

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2 class="text-3xl font-bold text-gray-800 mb-8">Tạo phim mới</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="bg-white shadow-lg rounded-lg p-8">
        <h4 class="text-xl font-semibold text-gray-700 mb-6">Thông tin phim</h4>
        <hr class="border-gray-300 mb-6" />
        @Html.ValidationSummary(true, "", new { @class = "text-red-500 mb-4" })

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
            @Html.LabelFor(model => model.MovieId, "Movie Id", new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.TextBoxFor(model => model.MovieId, new
            {
                @class = "w-full p-3 border border-gray-300 rounded-md bg-gray-100 cursor-not-allowed",
                @readonly = "readonly" // Thuộc tính ngăn chỉnh sửa
            })
            @Html.ValidationMessageFor(model => model.MovieId, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>


        <div>
            @Html.LabelFor(model => model.Title, "Tiêu đề", new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>

        <div>
            @Html.LabelFor(model => model.AccessLevel, "Phân loại", new { @class = "block text-gray-700 font-medium mb-2" })
            <select asp-for="AccessLevel" class="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="Free">Free</option>
                <option value="Premium">Premium</option>
            </select>
            @Html.ValidationMessageFor(model => model.AccessLevel, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>


        <div>
            @Html.LabelFor(model => model.Description, "Mô tả", new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenreId, "Định dạng", new { @class = "block text-gray-700 font-medium mb-2" })
            <div class="flex items-center space-x-6">
                <!-- Phim lẻ -->
                <label class="flex items-center space-x-2">
                    @Html.RadioButtonFor(model => model.GenreId, "False", new { @class = "form-radio text-blue-500" })
                    <span class="text-gray-700">Phim lẻ</span>
                </label>

                <!-- Phim bộ -->
                <label class="flex items-center space-x-2">
                    @Html.RadioButtonFor(model => model.GenreId, "True", new { @class = "form-radio text-blue-500" })
                    <span class="text-gray-700">Phim bộ</span>
                </label>
            </div>
            @Html.ValidationMessageFor(model => model.GenreId, "", new { @class = "text-danger mt-1" })
        </div>


        <div>
            @Html.LabelFor(model => model.GenreName, "Thể loại", new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.EditorFor(model => model.GenreName, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" } })
            @Html.ValidationMessageFor(model => model.GenreName, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>

        <div>
            @Html.LabelFor(model => model.DirectorName, "Đạo diễn", new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.EditorFor(model => model.DirectorName, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" } })
            @Html.ValidationMessageFor(model => model.DirectorName, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>

        <div>
            @Html.LabelFor(model => model.ActorName, "Diễn viên", new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.EditorFor(model => model.ActorName, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" } })
            @Html.ValidationMessageFor(model => model.ActorName, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>

        <div>
            @Html.LabelFor(model => model.Country, "Quốc gia", new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" } })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>

        <div>
            @Html.LabelFor(model => model.ReleaseDate, "Ngày sản xuất", new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" } })
            @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>

        <div>
            @Html.LabelFor(model => model.PosterUrl, new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.EditorFor(model => model.PosterUrl, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" } })
            @Html.ValidationMessageFor(model => model.PosterUrl, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>

        <div>
            @Html.LabelFor(model => model.TrailerUrl, "Trailer Url", new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.EditorFor(model => model.TrailerUrl, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" } })
            @Html.ValidationMessageFor(model => model.TrailerUrl, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>

        <div>
            @Html.LabelFor(model => model.CreatedAt, "Created At", new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-md bg-gray-100 cursor-not-allowed", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>

        <div>
            @Html.LabelFor(model => model.UpdatedAt, "Updated At", new { @class = "block text-gray-700 font-medium mb-2" })
            @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-md bg-gray-100 cursor-not-allowed", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-red-500 text-sm mt-1" })
        </div>
    </div>

        <div class="flex justify-between mt-8">
            <div>
                <input type="submit" value="Tạo mới" class="bg-fuchsia-600 hover:bg-fuchsia-800 text-white font-semibold py-2 px-6 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-200" />
            </div>
            <div>
                @Html.ActionLink("Quay lại", "Index", null, new { @class = "text-blue-500 hover:underline" })
            </div>
        </div>
    </div>
}
